{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/PanelRow.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/RandomizerInput.js","webpack:///./src/components/panel-inputs/ChoiceInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","react_default","a","createElement","Box","style","width","marginTop","Typography","variant","component","textAlign","gutterBottom","href","React","Component","PanelRow","InputComponent","params","_Component","RowWrap","props","_this","call","this","state","value","initialValue","min","_proto","prototype","shouldComponentUpdate","nextProps","nextState","_this2","Grid","container","justify","item","xs","name","Object","assign","onChange","x","setState","hideValue","Input","margin","e","parseFloat","target","inputProps","step","max","type","SliderInput","handleChange","bind","_assertThisInitialized","v","componentDidUpdate","prevProps","prevState","opt","Slider","defaultValue","RandomizerInput","seed","marginBottom","Button","onClick","color","ChoiceInput","entries","options","_i","_Object$entries","length","_Object$entries$_i","key","push","MenuItem","Select","Panel","_React$Component","sendInput","GeneratorPanel_assertThisInitialized","onParamChange","channels","resolution","octaves","gain","lacunarity","scale","offsetStrength","offsetOctaves","offsetScale","paramChange","componentDidMount","paramName","classes","Fragment","Paper","className","root","RandomizerInput_RandomizerInput","panel_inputs_ChoiceInput","256x256","512x512","1024x1024","2048x2048","1","3","panel_inputs_SliderInput","fontWeight","withStyles","theme","padding","PixelShaderCanvas","size","URLLoader","PixelShaderCanvas_assertThisInitialized","updateSize","par","$","ReactDOM","findDOMNode","parentNode","Math","height","window","addEventListener","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","canvas","setSize","texSize","canvasForLoader","document","loadRenderer","uniformValues","shape","Shape","Vector2","geo","ShapeBufferGeometry","constructUniforms","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","display","handleURLLoader","uniName","uniValue","_i2","_Object$entries2","_Object$entries2$_i","setUniforms","_i3","_Object$entries3","_Object$entries3$_i","loadResolution","toDataURL","console","log","_this3","ref","canv","Renderer","inputParams","motionSteps","components_PixelShaderCanvas","App","windowWidth","windowHeight","canvasDataUrl","handleInput","App_assertThisInitialized","loadURL","onresize","fadeIn","w","innerWidth","innerHeight","panelInput","spacing","WebsiteCaption","GeneratorPanel","download","RenderElement","paddingTop","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","module","exports"],"mappings":"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","file":"component---src-pages-index-js-917a352ffa4e9d44f772.js","sourcesContent":["import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nclass Caption extends React.Component {\n\n  render() {\n    return (\n      <Box style={{width:\"95%\", marginTop:\"2%\"}}>\n        <Typography variant=\"h2\" component=\"h1\" style={{textAlign:\"center\"}} gutterBottom>Noise generation</Typography>\n        <Typography variant=\"h5\" component=\"h1\" style={{textAlign:\"center\"}} gutterBottom>See on <a href=\"https://github.com/Xallt/Noise-map-generator\">Github</a></Typography>\n      </Box>\n    )\n  }\n}\n\nexport default Caption","import React, {Component} from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Input from '@material-ui/core/Input'\nimport Typography from '@material-ui/core/Typography'\n\nexport default (InputComponent, params) => \nclass RowWrap extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.initialValue || props.min || 0\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.value !== nextState.value\n    }\n    \n    render() {\n        return <Grid container justify=\"space-around\">\n            <Grid item xs={3}>\n                <Typography>\n                    {this.props.name}  \n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <InputComponent  {...this.props} onChange={(x) => {\n                    this.setState({value: x})\n                    this.props.onChange(x)\n                }} value={this.state.value}/>\n            </Grid>\n            <Grid item xs={2}>\n                {!this.props.hideValue && (!params || !params.hideValue) &&\n\n                <Input\n                    value={this.state.value}\n                    margin=\"dense\"\n                    onChange={(e) => {\n                        this.setState({value: parseFloat(e.target.value)})\n                    }}\n                    inputProps={{\n                        step: this.props.step,\n                        min: this.props.min,\n                        max: this.props.max,\n                        type: 'number'\n                    }}/>\n                }\n            </Grid>\n        </Grid>\n    }\n}\n","import React, { Component } from 'react'\n\nimport Slider from '@material-ui/core/Slider'\n\nimport PanelRow from \"../PanelRow\"\n\nclass SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.initialValue || props.min || 0)\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(e, v) {\n        this.props.onChange(v)\n        this.setState({value: v})\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevState.value) {\n            this.props.onChange(this.props.value)\n            this.setState({value: this.props.value})\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.value && this.state.value !== nextProps.value) || this.state.value !== nextState.value\n    }\n    \n    render() {\n        const opt = {}\n        if (this.props.step) {\n            opt.step = this.props.step\n        }\n        return <Slider\n                    min={this.props.min} max={this.props.max}\n                    defaultValue={this.props.initialValue}\n                    value={this.state.value}\n                    onChange={this.handleChange} {...opt}/>\n    }\n}\n\nexport default PanelRow(SliderInput)","import React, { Component } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nexport default class RandomizerInput extends Component {\n    constructor(props) {\n        super(props)\n        this.seed = 0\n    }\n\n    render() {\n        return <Grid container style={{marginBottom:\"2%\"}}>\n            <Grid item xs={12} style={{textAlign: \"center\"}}>\n                <Button onClick={(e) => {\n                    this.props.onChange(++this.seed)\n                }} color=\"default\" variant=\"contained\">\n                    Randomize\n                </Button>\n            </Grid>\n        </Grid>\n    }\n}\n","import React, { Component } from 'react'\n\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport PanelRow from '../PanelRow'\n\nclass ChoiceInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.value || Object.entries(this.props.options)[0][1]\n        }\n    }\n    render() {\n        var options = []\n        for (let [key, value] of Object.entries(this.props.options)) {\n            options.push(<MenuItem value={value} key={key}>{key}</MenuItem>)\n        }\n        return <Select \n                    onChange={(e) => {\n                        this.props.onChange(e.target.value)\n                        this.setState({value: e.target.value})    \n                    }}\n                    value={this.state.value}\n                >\n                {options}\n        </Select>\n    }\n}\n\nexport default PanelRow(ChoiceInput, {hideValue: true})","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport RandomizerInput from './panel-inputs/RandomizerInput'\nimport ChoiceInput from './panel-inputs/ChoiceInput'\n\nimport {withStyles} from '@material-ui/styles'\n\nconst styles = theme => ({\n  root: {\n    width: \"95%\",\n    margin: \"0 auto\",\n    padding: \"2% 1%\"\n  }\n})\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onParamChange = this.onParamChange.bind(this)\n    \n    this.params = {\n      channels: 1,\n      resolution: 256,\n      octaves: 8,\n      seed: 0,\n      gain: 0.5,\n      lacunarity: 2.0,\n      scale: 3.0,\n      offsetStrength: 0.15,\n      offsetOctaves: 8,\n      offsetScale: 10.0\n    }\n\n    this.paramChange = {\n      resolution: this.onParamChange('resolution'),\n      seed: this.onParamChange('seed'),\n      channels: this.onParamChange('channels'),\n      octaves: this.onParamChange('octaves'),\n      scale: this.onParamChange('scale'),\n      gain: this.onParamChange('gain'),\n      lacunarity: this.onParamChange('lacunarity'),\n      offsetStrength: this.onParamChange('offsetStrength'),\n      offsetScale: this.onParamChange('offsetScale'),\n      offsetOctaves: this.onParamChange('offsetOctaves'),\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onChange(this.params);\n  }\n\n  onParamChange(paramName) {\n    return ((x) => {\n      this.params[paramName] = x\n      this.sendInput()\n    })\n  }\n\n  render() {\n    const classes = this.props.classes\n\n    return (<>\n          <Paper className={classes.root}>\n            <Grid container>\n              <RandomizerInput name=\"Seed\"\n                            onChange={this.paramChange.seed}/>\n              <ChoiceInput name=\"Resolution\"\n                          options={{\n                            \"256x256\": 256,\n                            \"512x512\": 512,\n                            \"1024x1024\": 1024,\n                            \"2048x2048\": 2048\n                          }}\n                          onChange={this.paramChange.resolution}/>\n              <ChoiceInput name=\"Channels\"\n                          options={{\n                            \"1\": 1,\n                            \"3\": 3\n                          }}\n                          onChange={this.paramChange.channels}/>\n              \n              <hr/>\n              <SliderInput name=\"Octaves\" \n                          min={1} max={8} initialValue={8} \n                          onChange={this.paramChange.octaves}/>\n              <SliderInput name=\"Scale\" \n                          min={1} max={30} step={0.01} initialValue={3.0}\n                          onChange={this.paramChange.scale}/>\n              <SliderInput name=\"Gain\" \n                          min={0} max={3} step={0.01} initialValue={0.5}\n                          onChange={this.paramChange.gain}/>\n              <SliderInput name=\"Lacunarity\" \n                          min={1} max={8} step={0.01} initialValue={2}\n                          onChange={this.paramChange.lacunarity}/>  \n              <Grid item xs={12}>\n                <Typography variant=\"h5\" style={{fontWeight:\"bolder\", textAlign:\"center\"}} gutterBottom>Noise offsetting</Typography>\n              </Grid>\n              <SliderInput name=\"Octaves\" \n                          min={1} max={8} initialValue={8}\n                          onChange={this.paramChange.offsetOctaves}/>\n              <SliderInput name=\"Strength\" \n                          min={0} max={2} step={0.01} initialValue={0.15}\n                          onChange={this.paramChange.offsetStrength}/>\n              <SliderInput name=\"Scale\" \n                          min={1} max={100} step={0.01} initialValue={10}\n                          onChange={this.paramChange.offsetScale}/>\n            </Grid>\n          </Paper>\n    </>)\n  }\n}\n\nexport default withStyles(styles)(Panel)","import React , {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport $ from 'jquery'\n\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            size: 0\n        }\n\n        this.URLLoader = this.URLLoader.bind(this)\n    }\n\n    updateSize() {\n        const par = $(ReactDOM.findDOMNode(this).parentNode)\n        this.setState({\n            size: Math.min(par.width(), par.height())\n        })\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', (e) => {\n            this.updateSize()\n        })\n\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.canvasForLoader = document.createElement(\"canvas\")\n        this.loadRenderer = new WebGLRenderer({canvas: this.canvasForLoader})\n        this.loadRenderer.setSize(this.props.uniformValues.resolution, this.props.uniformValues.resolution)\n\n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.constructUniforms()\n        this.material = new ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n\n        this.props.handleURLLoader(this.URLLoader)\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n\n        for (const [uniName, uniValue] of Object.entries(nextProps.uniformValues)) {\n            if (this.uniforms[uniName].value !== uniValue) {\n                return true\n            }\n        }\n        return false\n    }\n    \n    constructUniforms() {\n        this.uniforms = {}\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName] = {value: uniValue}\n        }\n    }\n    setUniforms() {\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName].value = uniValue\n        }\n    }\n    URLLoader() {\n        this.loadRenderer.setSize(this.props.loadResolution, this.props.loadResolution)\n        this.loadRenderer.render(this.scene, this.camera)\n\n        return this.canvasForLoader.toDataURL()\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.setUniforms()\n        this.renderer.render(this.scene, this.camera)\n        console.log('rendered')\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n\n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed,\n      scale: this.props.inputParams.scale,\n      gain: this.props.inputParams.gain,\n      lacunarity: this.props.inputParams.lacunarity,\n      octaves: this.props.inputParams.octaves,\n      motionSteps: this.props.inputParams.motionSteps,\n      offsetStrength: this.props.inputParams.offsetStrength,\n      offsetScale: this.props.inputParams.offsetScale,\n      offsetOctaves: this.props.inputParams.offsetOctaves,\n      channels: this.props.inputParams.channels\n    }\n    return <PixelShaderCanvas texSize={512} \n                              uniformValues={uniformValues} \n                              handleURLLoader={this.props.handleURLLoader} \n                              loadResolution={this.props.inputParams.resolution}/>\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\n\nimport {withStyles} from \"@material-ui/styles\"\n\nconst styles = theme => ({\n  root: {\n    margin: \"0 auto\",\n    paddingTop: \"1%\"\n  }\n})\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {},\n      canvasDataUrl: \"#\"\n    }\n\n    this.handleInput = this.handleInput.bind(this)\n    this.handleURLLoader = this.handleURLLoader.bind(this)\n    this.loadURL = this.loadURL.bind(this)\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    const w = Math.min(window.innerWidth * .9, window.innerHeight * 1.8) \n    this.setState({\n      width: w,\n      height: w / 2\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n  handleURLLoader(URLLoader) {\n    console.log(\"Got a URL loader\")\n    this.URLLoader = URLLoader\n  }\n  loadURL() {\n    this.setState({\n      canvasDataUrl: this.URLLoader()\n    })\n  }\n  render() {\n    const classes = this.props.classes\n\n    return (\n      <Box\n        className={classes.root}\n        style={{\n          width: this.state.width,\n          height: this.state.height\n        }}>\n          <Box >\n            <Paper >\n              <Grid container >\n                <Grid item xs={5}>\n                  <Grid container spacing={3} style={{margin: \"2% 0\"}}>\n                    <Grid item xs={12}>\n                      <WebsiteCaption/>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <GeneratorPanel onChange={this.handleInput}/>\n                    </Grid>\n                    <Grid item xs={12} style={{textAlign:\"center\"}}>\n                      <Button variant=\"contained\" color=\"primary\" size=\"large\" href={this.state.canvasDataUrl} onClick={this.loadURL} download>Save</Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={7}>\n                  <RenderElement inputParams={this.state.inputParams} handleURLLoader={this.handleURLLoader} />  \n                </Grid>\n              </Grid>\n            </Paper>\n          </Box>\n      </Box>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Noise generator\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport 'typeface-roboto'\n\nimport '../styles/layout.scss'\n\nimport \"normalize.css\"\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n      <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"/>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      \n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float seed;\\n\\nuniform float scale;\\nuniform float gain, lacunarity, offsetStrength, offsetScale;\\nuniform int octaves, channels, offsetOctaves;\\n\\nfloat random(float x, float seed) {\\n    return fract(sin(x * 1238.412 + seed * 56.21) * 219.32 + .76 - seed * 89.1);\\n}\\nfloat random(vec2 p, float seed) {\\n    return random(random(p.x, seed) * random(p.y, seed) + random(p.x * p.y, seed) - random(p.x - p.y, seed) * 129., seed);\\n}\\n\\nvec2 rotate(vec2 p, float a) {\\n    return vec2(\\n        p.x * cos(a) - p.y * sin(a),\\n        p.x * sin(a) + p.y * cos(a)\\n    );\\n}\\n\\n// Perlin noise\\nfloat noise(vec2 p, float seed) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.), seed), d = random(n + vec2(1., 1.), seed),\\n          a = random(n + vec2(0., 0.), seed), b = random(n + vec2(1., 0.), seed);\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\nfloat perlin(vec2 st, float seed) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    st = st * scale;\\n    for (int i = 0; i < 8; ++i) {\\n        if (i >= octaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)), seed);\\n        amplitude *= gain;\\n        st *= lacunarity;\\n    }\\n    if (gain == 1.) {\\n        res = res / float(octaves);\\n    }\\n    else {\\n        res = res * (gain - 1.) / (pow(gain, float(octaves)) - 1.); \\n    }\\n    return res;\\n}\\nfloat offsetNoise(vec2 st, float seed) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    for (int i = 0; i < 8; ++i) {\\n        if (i >= offsetOctaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)), seed);\\n        amplitude *= 0.5;\\n        st *= 2.;\\n    }\\n    res = res * .5 / (1. - pow(.5, 8.)); \\n    return res;\\n}\\n\\nfloat finalNoise(vec2 st, float seed) {\\n    vec2 ost = st * offsetScale;\\n    vec2 offset = vec2(offsetNoise(ost, seed), offsetNoise(ost, random(seed, 2.1)));\\n    st = st + offset * offsetStrength;\\n    return perlin(st, seed);\\n}\\n\\nvoid main() {\\n    if (channels == 1) {\\n        float r = finalNoise(vPos, seed), \\n              g = r, \\n              b = r;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 3) {\\n        float r = finalNoise(vPos, seed), \\n              g = finalNoise(vPos, random(seed, 5.421)), \\n              b = finalNoise(vPos, random(seed, 9.5));\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n}\""],"sourceRoot":""}