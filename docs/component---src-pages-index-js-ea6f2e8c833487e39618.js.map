{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/NumberInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","react_default","a","createElement","Fragment","align","style","margin","href","React","Component","SliderInput","props","_this","_Component","call","this","state","value","dataTransform","x","defaultValue","min","_this2","_this$props","max","segmentation","name","id","type","onInput","e","target","setState","className","NumberInput","parseInt","Panel","_React$Component","sendInput","bind","_assertThisInitialized","onParamInput","params","resolution","octaves","seed","gain","lacunarity","scale","componentDidMount","paramName","width","padding","SliderInput_SliderInput","Math","round","pow","NumberInput_NumberInput","PixelShaderCanvas","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","canvas","setSize","texSize","shape","Shape","Vector2","geo","ShapeBufferGeometry","constructUniforms","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","height","display","_i","_Object$entries","Object","entries","uniformValues","length","_Object$entries$_i","uniName","uniValue","setUniforms","_i2","_Object$entries2","_Object$entries2$_i","componentDidUpdate","ref","canv","Renderer","inputParams","components_PixelShaderCanvas","App","windowWidth","windowHeight","handleInput","App_assertThisInitialized","updateSize","window","onresize","$","fadeIn","innerWidth","innerHeight","panelInput","fontSize","float","WebsiteCaption","components_GeneratorPanel","RenderElement","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","module","exports"],"mappings":"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","file":"component---src-pages-index-js-ea6f2e8c833487e39618.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n  render() {\n    return (<>\n      <h1 align='center' style={{margin:\"2% 0 0 0\"}}>Noise generation</h1>\n      <h4 align='center'>Made by <a href=\"https://xallt.github.io\">Xallt</a></h4>\n    </>)\n  }\n}\n\nexport default Caption","import React, { Component } from 'react'\n\nexport default class SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.dataTransform || ((x) => x))(props.defaultValue || props.min || 0)\n        }\n    }\n\n    render() {\n        var {min, max, segmentation, name, defaultValue, dataTransform} = this.props\n        segmentation = segmentation || 1\n        min = min || 0\n        defaultValue = defaultValue || min\n        dataTransform = dataTransform || ((x) => x)\n\n        return (<>\n            {name}: &nbsp;\n            <input id={\"i\" + name}\n                type=\"range\" \n                min={min * segmentation} max={max * segmentation} \n                onInput={(e) => {\n                    this.props.onInput(dataTransform(e.target.value / segmentation)) \n                    this.setState({value: dataTransform(e.target.value / segmentation)})\n                }} \n                defaultValue={defaultValue * segmentation}/>\n            &nbsp;<mark className=\"invert\">{this.state.value}</mark><br/>\n        </>)\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NumberInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.defaultValue || 0\n        }\n    }\n\n    render() {\n        var {defaultValue, name} = this.props\n\n        defaultValue = defaultValue || 0\n\n        return (<>\n            {name}: &nbsp;\n            <input id={\"i\" + name}\n                type=\"number\" \n                onInput={(e) => {\n                    this.props.onInput(parseInt(e.target.value) || 0)\n                    this.setState({value: e.target.value})\n                }} \n                defaultValue={defaultValue}/>\n        </>)\n    }\n}\n","import React from 'react'\n\nimport '../styles/GeneratorPanel.css'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport NumberInput from './panel-inputs/NumberInput'\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onParamInput = this.onParamInput.bind(this)\n    \n    this.params = {\n      resolution: 128,\n      octaves: 5,\n      seed: 0,\n      gain: 0.5,\n      lacunarity: 2.0,\n      scale: 10.0\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onInput(this.params);\n  }\n\n  onParamInput(paramName) {\n    return ((x) => {\n      this.params[paramName] = x\n      this.sendInput()\n    })\n  }\n\n  render() {\n    return (\n      <div style={{width: \"90%\", margin: \"1% auto\", padding:\"1%\"}}>\n        <SliderInput name=\"Resolution\" \n                     min={0} max={11} segmentation={100} defaultValue={7} \n                     onInput={this.onParamInput('resolution')} \n                     dataTransform={(x) => Math.round(2 ** x)}/>\n        <SliderInput name=\"Octaves\" \n                     min={1} max={8} defaultValue={5} \n                     onInput={this.onParamInput('octaves')}/>\n        <SliderInput name=\"Scale\" \n                     min={1} max={30} segmentation={100} defaultValue={10.0}\n                     onInput={this.onParamInput('scale')}/>\n        <SliderInput name=\"Gain\" \n                     min={0} max={3} segmentation={100} defaultValue={0.5}\n                     onInput={this.onParamInput('gain')}/>\n        <SliderInput name=\"Lacunarity\" \n                     min={1} max={8} segmentation={100} defaultValue={2}\n                     onInput={this.onParamInput('lacunarity')}/>\n        <NumberInput name=\"Seed\" \n                     defaultValue={0} \n                     onInput={this.onParamInput('seed')}/>\n      </div>\n    )\n  }\n}\n\nexport default Panel","import React , {Component} from 'react'\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    componentDidMount() {\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        \n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.constructUniforms()\n        this.material = new ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n    }\n    constructUniforms() {\n        this.uniforms = {}\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName] = {value: uniValue}\n        }\n    }\n    setUniforms() {\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName].value = uniValue\n        }\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.setUniforms()\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  \n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed,\n      scale: this.props.inputParams.scale,\n      gain: this.props.inputParams.gain,\n      lacunarity: this.props.inputParams.lacunarity,\n      octaves: this.props.inputParams.octaves\n    }\n    return (\n      <PixelShaderCanvas texSize={this.props.inputParams.resolution} uniformValues={uniformValues} />\n    )\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport '../styles/App.css'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n\n  render() {\n    return (\n      <div style={{\n        margin: '0 auto',\n        width: this.state.windowWidth * .9,\n        height: Math.min(this.state.windowWidth * .5, this.state.windowHeight * .9),\n        fontSize: \"1.5vw\"\n      }}>\n        <div style={{height: '100%'}}>\n          <div style={{height: '100%', width:'30%', float:'left'}}>\n            <div style={{height: '20%'}}>\n              <WebsiteCaption/>\n            </div>\n            <div style={{height: '80%'}}>\n              <GeneratorPanel onInput={this.handleInput}/>\n            </div>\n          </div>\n          <div style={{height: '100%', width:'70%', float:'right'}}>\n            <RenderElement inputParams={this.state.inputParams}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Beginner's title\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport {Helmet} from 'react-helmet'\n\nimport '../styles/layout.css'\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float seed;\\n\\n#define MAX_OCTAVES 20\\n\\nuniform float scale;\\nuniform float gain, lacunarity;\\nuniform int octaves;\\n\\nfloat random(float x) {\\n    return fract(sin(x * 1238.412 + seed * 56.21) * 219.32 + .76 - seed * 89.1);\\n}\\nfloat random(vec2 p) {\\n    return random(random(p.x) * random(p.y) + random(p.x * p.y) - random(p.x - p.y) * 129.);\\n}\\n\\nfloat noise(vec2 p) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.)), d = random(n + vec2(1., 1.)),\\n          a = random(n + vec2(0., 0.)), b = random(n + vec2(1., 0.));\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\n// Fractional brownian motion\\nvoid main() {\\n    vec2 st = vPos;\\n    float res = 0.;\\n    float amplitude = 1.;\\n    st = st * scale;\\n    for (int i = 0; i < MAX_OCTAVES; ++i) {\\n        if (i >= octaves) {\\n            break;\\n        }\\n        res += amplitude * noise(st);\\n        amplitude *= gain;\\n        st *= lacunarity;\\n    }\\n    if (gain == 1.) {\\n        res = res / float(octaves);\\n    }\\n    else {\\n        res = res * (gain - 1.) / (pow(gain, float(octaves)) - 1.); \\n    }\\n\\n    gl_FragColor = vec4(vec3(res), 1.);\\n}\""],"sourceRoot":""}