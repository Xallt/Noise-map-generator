{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/RandomizerInput.js","webpack:///./src/components/panel-inputs/ChoiceInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","_this","this","react_default","a","createElement","ref","el","className","align","style","margin","href","React","Component","SliderInput","props","_Component","call","state","value","dataTransform","x","defaultValue","min","_this2","_this$props","max","segmentation","name","valueElement","Fragment","hideValue","id","type","onInput","e","target","setState","width","RandomizerInput","seed","onClick","ChoiceInput","options","_i","_Object$entries","Object","entries","length","_Object$entries$_i","key","push","onChange","Panel","_React$Component","sendInput","bind","_assertThisInitialized","onParamInput","params","resolution","octaves","gain","lacunarity","scale","dissolution","motionSteps","offsetScale","channels","componentDidMount","paramName","_this3","padding","ChoiceInput_ChoiceInput","256x256","512x512","1024x1024","2048x2048","4096x4096","1","2","3","RandomizerInput_RandomizerInput","SliderInput_SliderInput","PixelShaderCanvas","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","canvas","setSize","texSize","shape","Shape","Vector2","geo","ShapeBufferGeometry","constructUniforms","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","height","display","uniformValues","uniName","uniValue","setUniforms","_i2","_Object$entries2","_Object$entries2$_i","componentDidUpdate","canv","Renderer","inputParams","components_PixelShaderCanvas","App","windowWidth","windowHeight","handleInput","App_assertThisInitialized","updateSize","window","onresize","$","fadeIn","innerWidth","innerHeight","panelInput","Math","fontSize","float","WebsiteCaption","GeneratorPanel","RenderElement","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","module","exports"],"mappings":"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","file":"component---src-pages-index-js-e9fed8fb6d6d538ca80f.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n\n  render() {\n    return (\n      <div ref={(el) => {this.el = el}} className=\"fill text-autosize\">\n        <h1 align='center' style={{margin:\"4.5% 0 0 0\"}}>\n          Noise generation</h1>\n        <h4 align='center'>See on <a href=\"https://github.com/Xallt/Noise-map-generator\">Github</a></h4>\n      </div>\n    )\n  }\n}\n\nexport default Caption","import React, { Component } from 'react'\n\nimport '../../styles/slider.scss'\n\nexport default class SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.dataTransform || ((x) => x))(props.defaultValue || props.min || 0)\n        }\n    }\n\n    render() {\n        var {min, max, segmentation, name, defaultValue, dataTransform} = this.props\n        segmentation = segmentation || 1\n        min = min || 0\n        defaultValue = defaultValue || min\n        dataTransform = dataTransform || ((x) => x)\n\n        var valueElement = <>&nbsp;<mark className=\"invert\">{this.state.value}</mark></>\n        if (this.props.hideValue) {\n            valueElement = <></>\n        }\n\n        return (<>\n            {name}: &nbsp;\n            <input id={\"i\" + name} className=\"slider\"\n                type=\"range\" \n                min={min * segmentation} max={max * segmentation} \n                onInput={(e) => {\n                    this.props.onInput(dataTransform(e.target.value / segmentation)) \n                    this.setState({value: dataTransform(e.target.value / segmentation)})\n                }}\n                defaultValue={defaultValue * segmentation}\n                style={{width: \"10vw\"}}/>\n            {valueElement}<br/>\n        </>)\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class RandomizerInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.seed = 0\n    }\n\n    render() {\n        return (<>\n            {this.props.name}: &nbsp;\n            <button onClick={(e) => {\n                this.props.onInput(++this.seed)\n            }}>\n                <h3 style={{margin: \"0.2vw\"}}>Randomize</h3>\n            </button>\n            <br/>\n        </>)\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class ChoiceInput extends Component {\n\n    render() {\n        var options = []\n        for (let [key, value] of Object.entries(this.props.options)) {\n            options.push(<option value={value} key={key}>{key}</option>)\n        }\n        return (<>\n            {this.props.name}: &nbsp;\n            <select onChange={(e) => {this.props.onInput(e.target.value)}}>\n                {options}\n            </select>\n            <br/>\n        </>)\n    }\n}\n","import React from 'react'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport RandomizerInput from './panel-inputs/RandomizerInput'\nimport ChoiceInput from './panel-inputs/ChoiceInput'\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onParamInput = this.onParamInput.bind(this)\n    \n    this.params = {\n      resolution: 256,\n      octaves: 5,\n      seed: 0,\n      gain: 0.5,\n      lacunarity: 2.0,\n      scale: 6.0,\n      dissolution: 0.01,\n      motionSteps: 1,\n      offsetScale: 10.0,\n      channels: 1\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onInput(this.params);\n  }\n\n  onParamInput(paramName) {\n    return ((x) => {\n      this.params[paramName] = x\n      this.sendInput()\n    })\n  }\n\n  render() {\n    return (\n      <div ref={(el)=>{this.el = el}} style={{width: \"90%\", margin: \"1% auto\", padding:\"1%\"}}>\n        <ChoiceInput name=\"Resolution\"\n                     options={{\n                       \"256x256\": 256,\n                       \"512x512\": 512,\n                       \"1024x1024\": 1024,\n                       \"2048x2048\": 2048,\n                       \"4096x4096\": 4096\n                     }}\n                     onInput={this.onParamInput('resolution')}/>\n        <ChoiceInput name=\"Channels\"\n                     options={{\n                       \"1\": 1,\n                       \"2\": 2,\n                       \"3\": 3\n                     }}\n                     onInput={this.onParamInput('channels')}/>\n        <RandomizerInput name=\"Seed\"\n                     onInput={this.onParamInput('seed')}/>\n        \n        <hr/>\n        <SliderInput name=\"Octaves\" \n                     min={1} max={8} defaultValue={5} \n                     onInput={this.onParamInput('octaves')}/>\n        <SliderInput name=\"Scale\" \n                     min={1} max={30} segmentation={100} defaultValue={6.0}\n                     onInput={this.onParamInput('scale')}/>\n        <SliderInput name=\"Gain\" \n                     min={0} max={3} segmentation={100} defaultValue={0.5}\n                     onInput={this.onParamInput('gain')}/>\n        <SliderInput name=\"Lacunarity\" \n                     min={1} max={8} segmentation={100} defaultValue={2}\n                     onInput={this.onParamInput('lacunarity')}/>\n        <hr/>\n        <h4 style={{margin:\"3% 0\"}} >Noise offsetting</h4>\n        <SliderInput name=\"Motion steps\" \n                     min={0} max={5} defaultValue={1}\n                     onInput={this.onParamInput('motionSteps')}/>\n        <SliderInput name=\"Dissolution\" \n                     min={0.001} max={1} segmentation={1000} defaultValue={0.1}\n                     onInput={this.onParamInput('dissolution')} hideValue={true}/>\n        <SliderInput name=\"Offset scale\" \n                     min={1} max={20} segmentation={100} defaultValue={10}\n                     onInput={this.onParamInput('offsetScale')} hideValue={true}/>\n      </div>\n    )\n  }\n}\n\nexport default Panel","import React , {Component} from 'react'\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    componentDidMount() {\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        \n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.constructUniforms()\n        this.material = new ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n    }\n    constructUniforms() {\n        this.uniforms = {}\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName] = {value: uniValue}\n        }\n    }\n    setUniforms() {\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName].value = uniValue\n        }\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.setUniforms()\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  \n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed,\n      scale: this.props.inputParams.scale,\n      gain: this.props.inputParams.gain,\n      lacunarity: this.props.inputParams.lacunarity,\n      octaves: this.props.inputParams.octaves,\n      motionSteps: this.props.inputParams.motionSteps,\n      dissolution: this.props.inputParams.dissolution,\n      offsetScale: this.props.inputParams.offsetScale,\n      channels: this.props.inputParams.channels\n    }\n    return (\n      <PixelShaderCanvas texSize={512} uniformValues={uniformValues} />\n    )\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport '../styles/App.scss'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n\n  render() {\n    return (\n      <div style={{\n        margin: '0 auto',\n        width: this.state.windowWidth * .9,\n        height: Math.min(this.state.windowWidth * .5, this.state.windowHeight * .9),\n        fontSize: \"1.5vw\"\n      }}>\n        <div style={{height: '100%'}}>\n          <div style={{height: '100%', width:'30%', float:'left'}}>\n            <div style={{height: '20%'}}>\n              <WebsiteCaption/>\n            </div>\n            <div style={{height: '80%'}}>\n              <GeneratorPanel onInput={this.handleInput}/>\n            </div>\n          </div>\n          <div style={{height: '100%', width:'70%', float:'right'}}>\n            <RenderElement inputParams={this.state.inputParams}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Beginner's title\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport {Helmet} from 'react-helmet'\n\nimport '../styles/layout.scss'\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float seed;\\n\\n#define MAX_OCTAVES 20\\n\\nuniform float scale;\\nuniform float gain, lacunarity, dissolution, offsetScale;\\nuniform int octaves, motionSteps, channels;\\n\\nfloat random(float x) {\\n    return fract(sin(x * 1238.412 + seed * 56.21) * 219.32 + .76 - seed * 89.1);\\n}\\nfloat random(vec2 p) {\\n    return random(random(p.x) * random(p.y) + random(p.x * p.y) - random(p.x - p.y) * 129.);\\n}\\n\\nvec2 rotate(vec2 p, float a) {\\n    return vec2(\\n        p.x * cos(a) - p.y * sin(a),\\n        p.x * sin(a) + p.y * cos(a)\\n    );\\n}\\n\\n// Perlin noise\\nfloat noise(vec2 p) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.)), d = random(n + vec2(1., 1.)),\\n          a = random(n + vec2(0., 0.)), b = random(n + vec2(1., 0.));\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\n// Fractional brownian motion\\nfloat fbm(vec2 st) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    st = st * scale;\\n    for (int i = 0; i < MAX_OCTAVES; ++i) {\\n        if (i >= octaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)));\\n        amplitude *= gain;\\n        st *= lacunarity;\\n    }\\n    if (gain == 1.) {\\n        res = res / float(octaves);\\n    }\\n    else {\\n        res = res * (gain - 1.) / (pow(gain, float(octaves)) - 1.); \\n    }\\n    return res;\\n}\\n\\nfloat offsetNoise(vec2 st) {\\n    vec2 ost = st * offsetScale;\\n    for (int i = 0; i < 10; ++i) {\\n        if (i >= motionSteps) {\\n            break;\\n        }\\n        float r_a = random(float(i)) - .5, r_B = random(r_a) * 100. - 50., r_C = random(r_B) * 100. - 50., \\n              r_d = random(r_C)  - .5, r_E = random(r_d) * 100. - 50., r_F = random(r_E) * 100. - 50.;\\n        vec2 offset = vec2(fbm(vec2(ost.y * r_a + r_B, ost.x * r_a + r_C)), fbm(vec2(ost.y * r_d + r_E, ost.x * r_d + r_F)));\\n        st = st + offset * dissolution;\\n    }\\n    return fbm(st);\\n}\\n\\nvoid main() {\\n    if (channels == 1) {\\n        float r = offsetNoise(vPos), \\n              g = r, \\n              b = r;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 2) {\\n        float r = offsetNoise(vPos), \\n              g = offsetNoise(rotate(vPos, 45.) + vec2(617., 213.)), \\n              b = (r + g) / 2.;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 3) {\\n        float r = offsetNoise(vPos), \\n              g = offsetNoise(rotate(vPos, 45.) + vec2(617., 213.)), \\n              b = offsetNoise(rotate(vPos, 30.) - vec2(617., 213.));\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n}\""],"sourceRoot":""}