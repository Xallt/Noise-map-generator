{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/PanelRow.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/RandomizerInput.js","webpack:///./src/components/panel-inputs/ChoiceInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","_this","this","react_default","a","createElement","ref","el","className","align","style","margin","href","React","Component","PanelRow","InputComponent","params","_Component","RowWrap","props","call","state","value","initialValue","min","_proto","prototype","shouldComponentUpdate","nextProps","nextState","_this2","Grid","container","justify","item","xs","name","Object","assign","onChange","x","setState","hideValue","Input","e","parseFloat","target","inputProps","step","max","type","SliderInput","handleChange","bind","_assertThisInitialized","v","componentDidUpdate","prevProps","prevState","opt","Slider","defaultValue","RandomizerInput","seed","marginBottom","textAlign","Button","onClick","color","variant","ChoiceInput","entries","options","_i","_Object$entries","length","_Object$entries$_i","key","push","MenuItem","Select","Panel","_React$Component","sendInput","GeneratorPanel_assertThisInitialized","onParamChange","channels","resolution","octaves","gain","lacunarity","scale","offsetStrength","offsetOctaves","offsetScale","paramChange","componentDidMount","paramName","classes","Fragment","Paper","root","RandomizerInput_RandomizerInput","panel_inputs_ChoiceInput","256x256","512x512","1024x1024","2048x2048","4096x4096","1","3","panel_inputs_SliderInput","withStyles","theme","width","padding","PixelShaderCanvas","size","canvasLoader","PixelShaderCanvas_assertThisInitialized","updateSize","par","$","ReactDOM","findDOMNode","parentNode","Math","height","window","addEventListener","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","canvas","setSize","texSize","canvasForLoader","document","loadRenderer","shape","Shape","Vector2","geo","ShapeBufferGeometry","constructUniforms","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","display","handleCanvasLoader","uniformValues","uniName","uniValue","setUniforms","_i2","_Object$entries2","_Object$entries2$_i","_this3","canv","Renderer","inputParams","motionSteps","components_PixelShaderCanvas","App","windowWidth","windowHeight","handleInput","App_assertThisInitialized","onresize","fadeIn","w","innerWidth","innerHeight","panelInput","Box","limitSize","WebsiteCaption","GeneratorPanel","RenderElement","paddingTop","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","module","exports"],"mappings":"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","file":"component---src-pages-index-js-ee9f65838ce3ba4cd587.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n\n  render() {\n    return (\n      <div ref={(el) => {this.el = el}} className=\"fill text-autosize\">\n        <h1 align='center' style={{margin:\"4.5% 0 0 0\"}}>\n          Noise generation</h1>\n        <h4 align='center'>See on <a href=\"https://github.com/Xallt/Noise-map-generator\">Github</a></h4>\n      </div>\n    )\n  }\n}\n\nexport default Caption","import React, {Component} from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Input from '@material-ui/core/Input'\n\nexport default (InputComponent, params) => \nclass RowWrap extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.initialValue || props.min || 0\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.value !== nextState.value\n    }\n    \n    render() {\n        return <Grid container justify=\"space-around\">\n            <Grid item xs={3}>\n                {this.props.name}\n            </Grid>\n            <Grid item xs={6}>\n                <InputComponent  {...this.props} onChange={(x) => {\n                    this.setState({value: x})\n                    this.props.onChange(x)\n                }} value={this.state.value}/>\n            </Grid>\n            <Grid item xs={2}>\n                {!this.props.hideValue && (!params || !params.hideValue) &&\n\n                <Input\n                    value={this.state.value}\n                    margin=\"dense\"\n                    onChange={(e) => {\n                        this.setState({value: parseFloat(e.target.value)})\n                    }}\n                    inputProps={{\n                        step: this.props.step,\n                        min: this.props.min,\n                        max: this.props.max,\n                        type: 'number'\n                    }}/>\n                }\n            </Grid>\n        </Grid>\n    }\n}\n","import React, { Component } from 'react'\n\nimport Slider from '@material-ui/core/Slider'\n\nimport PanelRow from \"../PanelRow\"\n\nclass SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.initialValue || props.min || 0)\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(e, v) {\n        this.props.onChange(v)\n        this.setState({value: v})\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevState.value) {\n            // console.log(this.props.value)\n            this.props.onChange(this.props.value)\n            this.setState({value: this.props.value})\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.value && this.state.value !== nextProps.value) || this.state.value !== nextState.value\n    }\n    \n    render() {\n        const opt = {}\n        if (this.props.step) {\n            opt.step = this.props.step\n        }\n        return <Slider\n                    min={this.props.min} max={this.props.max}\n                    defaultValue={this.props.initialValue}\n                    value={this.state.value}\n                    onChange={this.handleChange} {...opt}/>\n    }\n}\n\nexport default PanelRow(SliderInput)","import React, { Component } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nexport default class RandomizerInput extends Component {\n    constructor(props) {\n        super(props)\n        this.seed = 0\n    }\n\n    render() {\n        return <Grid container style={{marginBottom:\"2%\"}}>\n            <Grid item xs={12} style={{textAlign: \"center\"}}>\n                <Button onClick={(e) => {\n                    this.props.onChange(++this.seed)\n                }} color=\"default\" variant=\"contained\">\n                    Randomize\n                </Button>\n            </Grid>\n        </Grid>\n    }\n}\n","import React, { Component } from 'react'\n\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport PanelRow from '../PanelRow'\n\nclass ChoiceInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.value || Object.entries(this.props.options)[0][1]\n        }\n    }\n    render() {\n        var options = []\n        for (let [key, value] of Object.entries(this.props.options)) {\n            options.push(<MenuItem value={value} key={key}>{key}</MenuItem>)\n        }\n        return <Select \n                    onChange={(e) => {\n                        this.props.onChange(e.target.value)\n                        this.setState({value: e.target.value})    \n                    }}\n                    value={this.state.value}\n                >\n                {options}\n        </Select>\n    }\n}\n\nexport default PanelRow(ChoiceInput, {hideValue: true})","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport RandomizerInput from './panel-inputs/RandomizerInput'\nimport ChoiceInput from './panel-inputs/ChoiceInput'\n\nimport {withStyles} from '@material-ui/styles'\n\nconst styles = theme => ({\n  root: {\n    width: \"95%\",\n    margin: \"0 auto\",\n    padding: \"2% 1%\"\n  }\n})\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onParamChange = this.onParamChange.bind(this)\n    \n    this.params = {\n      channels: 1,\n      resolution: 256,\n      octaves: 8,\n      seed: 0,\n      gain: 0.5,\n      lacunarity: 2.0,\n      scale: 3.0,\n      offsetStrength: 0.15,\n      offsetOctaves: 8,\n      offsetScale: 10.0\n    }\n\n    this.paramChange = {\n      resolution: this.onParamChange('resolution'),\n      seed: this.onParamChange('seed'),\n      channels: this.onParamChange('channels'),\n      octaves: this.onParamChange('octaves'),\n      scale: this.onParamChange('scale'),\n      gain: this.onParamChange('gain'),\n      lacunarity: this.onParamChange('lacunarity'),\n      offsetStrength: this.onParamChange('offsetStrength'),\n      offsetScale: this.onParamChange('offsetScale'),\n      offsetOctaves: this.onParamChange('offsetOctaves'),\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onChange(this.params);\n  }\n\n  onParamChange(paramName) {\n    return ((x) => {\n      this.params[paramName] = x\n      this.sendInput()\n    })\n  }\n\n  render() {\n    const classes = this.props.classes\n\n    return (<>\n          <Paper className={classes.root}>\n            <Grid container>\n              <RandomizerInput name=\"Seed\"\n                            onChange={this.paramChange.seed}/>\n              <ChoiceInput name=\"Resolution\"\n                          options={{\n                            \"256x256\": 256,\n                            \"512x512\": 512,\n                            \"1024x1024\": 1024,\n                            \"2048x2048\": 2048,\n                            \"4096x4096\": 4096\n                          }}\n                          onChange={this.paramChange.resolution}/>\n              <ChoiceInput name=\"Channels\"\n                          options={{\n                            \"1\": 1,\n                            \"3\": 3\n                          }}\n                          onChange={this.paramChange.channels}/>\n              \n              <hr/>\n              <SliderInput name=\"Octaves\" \n                          min={1} max={8} initialValue={8} \n                          onChange={this.paramChange.octaves}/>\n              <SliderInput name=\"Scale\" \n                          min={1} max={30} step={0.01} initialValue={3.0}\n                          onChange={this.paramChange.scale}/>\n              <SliderInput name=\"Gain\" \n                          min={0} max={3} step={0.01} initialValue={0.5}\n                          onChange={this.paramChange.gain}/>\n              <SliderInput name=\"Lacunarity\" \n                          min={1} max={8} step={0.01} initialValue={2}\n                          onChange={this.paramChange.lacunarity}/>  \n              <Grid item xs={12}>\n                <h4 style={{margin:\"3% 0\"}} >Noise offsetting</h4>\n              </Grid>\n              <SliderInput name=\"Octaves\" \n                          min={1} max={8} initialValue={8}\n                          onChange={this.paramChange.offsetOctaves}/>\n              <SliderInput name=\"Strength\" \n                          min={0} max={2} step={0.01} initialValue={0.15}\n                          onChange={this.paramChange.offsetStrength}/>\n              <SliderInput name=\"Scale\" \n                          min={1} max={100} step={0.01} initialValue={10}\n                          onChange={this.paramChange.offsetScale}/>\n            </Grid>\n          </Paper>\n    </>)\n  }\n}\n\nexport default withStyles(styles)(Panel)","import React , {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport $ from 'jquery'\n\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            size: 0\n        }\n        this.canvasLoader = this.canvasLoader.bind(this)\n    }\n\n    updateSize() {\n        const par = $(ReactDOM.findDOMNode(this).parentNode)\n        this.setState({\n            size: Math.min(par.width(), par.height())\n        })\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', (e) => {\n            this.updateSize()\n        })\n\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.canvasForLoader = document.createElement(\"canvas\")\n        this.loadRenderer = new WebGLRenderer({canvas: this.canvasForLoader})\n        this.loadRenderer.setSize(this.props.resolution, this.props.resolution)\n\n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.constructUniforms()\n        this.material = new ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n\n        this.props.handleCanvasLoader(this.canvasLoader)\n    }\n    constructUniforms() {\n        this.uniforms = {}\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName] = {value: uniValue}\n        }\n    }\n    setUniforms() {\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName].value = uniValue\n        }\n    }\n    canvasLoader() {\n        this.loadRenderer.render(this.scene, this.camera)\n        return this.canvasForLoader\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.setUniforms()\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed,\n      scale: this.props.inputParams.scale,\n      gain: this.props.inputParams.gain,\n      lacunarity: this.props.inputParams.lacunarity,\n      octaves: this.props.inputParams.octaves,\n      motionSteps: this.props.inputParams.motionSteps,\n      offsetStrength: this.props.inputParams.offsetStrength,\n      offsetScale: this.props.inputParams.offsetScale,\n      offsetOctaves: this.props.inputParams.offsetOctaves,\n      channels: this.props.inputParams.channels,\n    }\n    return <PixelShaderCanvas texSize={512} uniformValues={uniformValues} handleCanvasLoader={this.props.handleCanvasLoader} />\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport {withStyles} from \"@material-ui/styles\"\n\nconst styles = theme => ({\n  root: {\n    margin: \"0 auto\",\n    paddingTop: \"1%\"\n  },\n  limitSize: {\n    height: \"100%\"\n  }\n})\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this)\n    this.handleCanvasLoader = this.handleCanvasLoader.bind(this)\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    const w = Math.min(window.innerWidth * .9, window.innerHeight * 1.8) \n    this.setState({\n      width: w,\n      height: w / 2\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n  handleCanvasLoader(canvasLoader) {\n    this.setState({\n      canvasLoader: canvasLoader\n    })\n  }\n\n  render() {\n    const classes = this.props.classes\n\n    return (\n      <Box\n        className={classes.root}\n        style={{\n          width: this.state.width,\n          height: this.state.height\n        }}>\n          <Box className={classes.limitSize}>\n            <Paper className={classes.limitSize}>\n              <Grid container className={classes.limitSize}>\n                <Grid item xs={5}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <WebsiteCaption/>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <GeneratorPanel onChange={this.handleInput} canvasLoader={this.state.canvasLoader} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={7}>\n                  <RenderElement inputParams={this.state.inputParams} handleCanvasLoader={this.handleCanvasLoader} />  \n                </Grid>\n              </Grid>\n            </Paper>\n          </Box>\n      </Box>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Noise generator\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport 'typeface-roboto'\n\nimport '../styles/layout.scss'\n\nimport \"normalize.css\"\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n      <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"/>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      \n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float seed;\\n\\nuniform float scale;\\nuniform float gain, lacunarity, offsetStrength, offsetScale;\\nuniform int octaves, channels, offsetOctaves;\\n\\nfloat random(float x, float seed) {\\n    return fract(sin(x * 1238.412 + seed * 56.21) * 219.32 + .76 - seed * 89.1);\\n}\\nfloat random(vec2 p, float seed) {\\n    return random(random(p.x, seed) * random(p.y, seed) + random(p.x * p.y, seed) - random(p.x - p.y, seed) * 129., seed);\\n}\\n\\nvec2 rotate(vec2 p, float a) {\\n    return vec2(\\n        p.x * cos(a) - p.y * sin(a),\\n        p.x * sin(a) + p.y * cos(a)\\n    );\\n}\\n\\n// Perlin noise\\nfloat noise(vec2 p, float seed) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.), seed), d = random(n + vec2(1., 1.), seed),\\n          a = random(n + vec2(0., 0.), seed), b = random(n + vec2(1., 0.), seed);\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\nfloat perlin(vec2 st, float seed) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    st = st * scale;\\n    for (int i = 0; i < 8; ++i) {\\n        if (i >= octaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)), seed);\\n        amplitude *= gain;\\n        st *= lacunarity;\\n    }\\n    if (gain == 1.) {\\n        res = res / float(octaves);\\n    }\\n    else {\\n        res = res * (gain - 1.) / (pow(gain, float(octaves)) - 1.); \\n    }\\n    return res;\\n}\\nfloat offsetNoise(vec2 st, float seed) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    for (int i = 0; i < 8; ++i) {\\n        if (i >= offsetOctaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)), seed);\\n        amplitude *= 0.5;\\n        st *= 2.;\\n    }\\n    res = res * .5 / (1. - pow(.5, 8.)); \\n    return res;\\n}\\n\\nfloat finalNoise(vec2 st, float seed) {\\n    vec2 ost = st * offsetScale;\\n    vec2 offset = vec2(offsetNoise(ost, seed), offsetNoise(ost, random(seed, 2.1)));\\n    st = st + offset * offsetStrength;\\n    return perlin(st, seed);\\n}\\n\\nvoid main() {\\n    if (channels == 1) {\\n        float r = finalNoise(vPos, seed), \\n              g = r, \\n              b = r;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 3) {\\n        float r = finalNoise(vPos, seed), \\n              g = finalNoise(vPos, random(seed, 5.421)), \\n              b = finalNoise(vPos, random(seed, 9.5));\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n}\""],"sourceRoot":""}