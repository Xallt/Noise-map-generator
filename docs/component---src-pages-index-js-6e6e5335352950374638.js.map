{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/PanelRow.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/RandomizerInput.js","webpack:///./src/components/panel-inputs/ChoiceInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","_this","this","react_default","a","createElement","ref","el","className","align","style","margin","href","React","Component","PanelRow","InputComponent","params","_Component","RowWrap","props","call","state","value","initialValue","prototype","_this2","Grid","container","item","xs","name","Object","assign","onChange","x","setState","hideValue","SliderInput","min","opt","step","Slider","max","defaultValue","e","v","RandomizerInput","seed","Fragment","Button","onClick","color","variant","ChoiceInput","entries","options","_i","_Object$entries","length","_Object$entries$_i","key","push","MenuItem","Select","target","Panel","_React$Component","sendInput","bind","_assertThisInitialized","onParamInput","resolution","octaves","gain","lacunarity","scale","dissolution","motionSteps","offsetScale","channels","componentDidMount","paramName","Container","RandomizerInput_RandomizerInput","panel_inputs_ChoiceInput","256x256","512x512","1024x1024","2048x2048","4096x4096","1","3","panel_inputs_SliderInput","PixelShaderCanvas","scene","Scene","camera","OrthographicCamera","position","z","renderer","WebGLRenderer","canvas","setSize","texSize","shape","Shape","Vector2","geo","ShapeBufferGeometry","constructUniforms","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","height","width","display","uniformValues","uniName","uniValue","setUniforms","_i2","_Object$entries2","_Object$entries2$_i","componentDidUpdate","canv","Renderer","inputParams","components_PixelShaderCanvas","App","windowWidth","windowHeight","handleInput","App_assertThisInitialized","updateSize","window","onresize","$","fadeIn","w","Math","innerWidth","innerHeight","panelInput","Paper","WebsiteCaption","GeneratorPanel","RenderElement","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","type","module","exports"],"mappings":"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","file":"component---src-pages-index-js-6e6e5335352950374638.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n\n  render() {\n    return (\n      <div ref={(el) => {this.el = el}} className=\"fill text-autosize\">\n        <h1 align='center' style={{margin:\"4.5% 0 0 0\"}}>\n          Noise generation</h1>\n        <h4 align='center'>See on <a href=\"https://github.com/Xallt/Noise-map-generator\">Github</a></h4>\n      </div>\n    )\n  }\n}\n\nexport default Caption","import React, {Component} from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nexport default (InputComponent, params) => \nclass RowWrap extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.initialValue\n        }\n    }\n    render() {\n        return <Grid container>\n            <Grid item xs={3}>\n                {this.props.name}\n            </Grid>\n            <Grid item xs={8}>\n                <InputComponent  {...this.props} onChange={(x) => {\n                    this.setState({value: x})\n                    this.props.onChange(x)\n                }}/>\n            </Grid>\n            <Grid item xs={1}>\n                {!this.props.hideValue && (!params || !params.hideValue) &&\n                this.state.value\n                }\n            </Grid>\n        </Grid>\n    }\n}\n","import React, { Component } from 'react'\n\nimport Slider from '@material-ui/core/Slider'\n\nimport PanelRow from \"../PanelRow\"\n\nimport '../../styles/slider.scss'\n\nclass SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.initialValue || props.min || 0)\n        }\n    }\n\n    render() {\n        const opt = {}\n        if (this.props.step) {\n            opt.step = this.props.step\n        }\n        return <Slider\n                    min={this.props.min} max={this.props.max}\n                    defaultValue={this.props.initialValue}\n                    onChange={(e, v) => {\n                        this.props.onChange(v)\n                        this.setState({value: v})\n                    }} {...opt}/>\n    }\n}\n\nexport default PanelRow(SliderInput)","import React, { Component } from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nexport default class RandomizerInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.seed = 0\n    }\n\n    render() {\n        return (<>\n            <Button onClick={(e) => {\n                this.props.onChange(++this.seed)\n            }} color=\"default\" variant=\"contained\">\n                Randomize\n            </Button>\n            <br/>\n        </>)\n    }\n}\n","import React, { Component } from 'react'\n\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport PanelRow from '../PanelRow'\n\nclass ChoiceInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.value || Object.entries(this.props.options)[0][1]\n        }\n    }\n    render() {\n        var options = []\n        for (let [key, value] of Object.entries(this.props.options)) {\n            options.push(<MenuItem value={value} key={key}>{key}</MenuItem>)\n        }\n        return <Select \n                    onChange={(e) => {\n                        this.props.onChange(e.target.value)\n                        this.setState({value: e.target.value})    \n                    }}\n                    value={this.state.value}\n                >\n                {options}\n        </Select>\n    }\n}\n\nexport default PanelRow(ChoiceInput, {hideValue: true})","import React from 'react'\n\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport RandomizerInput from './panel-inputs/RandomizerInput'\nimport ChoiceInput from './panel-inputs/ChoiceInput'\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onParamInput = this.onParamInput.bind(this)\n    \n    this.params = {\n      resolution: 256,\n      octaves: 8,\n      seed: 0,\n      gain: 0.5,\n      lacunarity: 2.0,\n      scale: 3.0,\n      dissolution: 0.05,\n      motionSteps: 1,\n      offsetScale: 10.0,\n      channels: 1\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onChange(this.params);\n  }\n\n  onParamInput(paramName) {\n    return ((x) => {\n      this.params[paramName] = x\n      this.sendInput()\n    })\n  }\n\n  render() {\n    return (\n        <Container>\n          <RandomizerInput name=\"Seed\"\n                        onChange={this.onParamInput('seed')}/> <br/>\n          <Grid container>\n            <ChoiceInput name=\"Resolution\"\n                        options={{\n                          \"256x256\": 256,\n                          \"512x512\": 512,\n                          \"1024x1024\": 1024,\n                          \"2048x2048\": 2048,\n                          \"4096x4096\": 4096\n                        }}\n                        onChange={this.onParamInput('resolution')}/>\n            <ChoiceInput name=\"Channels\"\n                        options={{\n                          \"1\": 1,\n                          \"3\": 3\n                        }}\n                        onChange={this.onParamInput('channels')}/>\n            \n            <hr/>\n            <SliderInput name=\"Octaves\" \n                        min={1} max={8} initialValue={8} \n                        onChange={this.onParamInput('octaves')}/>\n            <SliderInput name=\"Scale\" \n                        min={1} max={30} step={0.01} initialValue={3.0}\n                        onChange={this.onParamInput('scale')}/>\n            <SliderInput name=\"Gain\" \n                        min={0} max={3} step={0.01} initialValue={0.5}\n                        onChange={this.onParamInput('gain')}/>\n            <SliderInput name=\"Lacunarity\" \n                        min={1} max={8} step={0.01} initialValue={2}\n                        onChange={this.onParamInput('lacunarity')}/>  \n            <Grid item xs={12}>\n              <h4 style={{margin:\"3% 0\"}} >Noise offsetting</h4>\n            </Grid>\n            \n            <SliderInput name=\"Strength\" \n                        min={0.001} max={1} step={0.01} initialValue={0.05}\n                        onChange={this.onParamInput('dissolution')} hideValue={true}/>\n            <SliderInput name=\"Offset scale\" \n                        min={1} max={20} step={0.01} initialValue={10}\n                        onChange={this.onParamInput('offsetScale')} hideValue={true}/>\n          </Grid>\n      </Container>\n    )\n  }\n}\n\nexport default Panel","import React , {Component} from 'react'\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    componentDidMount() {\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        \n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.constructUniforms()\n        this.material = new ShaderMaterial({\n            uniforms: this.uniforms,\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n    }\n    constructUniforms() {\n        this.uniforms = {}\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName] = {value: uniValue}\n        }\n    }\n    setUniforms() {\n        for (const [uniName, uniValue] of Object.entries(this.props.uniformValues)) {\n            this.uniforms[uniName].value = uniValue\n        }\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.setUniforms()\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  \n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed,\n      scale: this.props.inputParams.scale,\n      gain: this.props.inputParams.gain,\n      lacunarity: this.props.inputParams.lacunarity,\n      octaves: this.props.inputParams.octaves,\n      motionSteps: this.props.inputParams.motionSteps,\n      dissolution: this.props.inputParams.dissolution,\n      offsetScale: this.props.inputParams.offsetScale,\n      channels: this.props.inputParams.channels\n    }\n    return (\n      <PixelShaderCanvas texSize={512} uniformValues={uniformValues} />\n    )\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport '../styles/App.scss'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    const w = Math.min(window.innerWidth * .9, window.innerHeight * 1.8) \n    this.setState({\n      width: w,\n      height: w / 2\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n\n  render() {\n    return (\n      <div \n        className=\"App-container\" \n        style={{\n          width: this.state.width,\n          height: this.state.height\n      }}>\n        <Paper>\n          <Grid container>\n            <Grid item xs={4}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <WebsiteCaption/>\n                </Grid>\n                <Grid item xs={12}>\n                  <GeneratorPanel onChange={this.handleInput}/>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={8}>\n            <RenderElement inputParams={this.state.inputParams}/>  \n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Noise generator\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport '../styles/layout.scss'\n\nimport \"normalize.css\";\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n      <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"/>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      \n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float seed;\\n\\n#define MAX_OCTAVES 20\\n\\nuniform float scale;\\nuniform float gain, lacunarity, dissolution, offsetScale;\\nuniform int octaves, channels;\\n\\nfloat random(float x) {\\n    return fract(sin(x * 1238.412 + seed * 56.21) * 219.32 + .76 - seed * 89.1);\\n}\\nfloat random(vec2 p) {\\n    return random(random(p.x) * random(p.y) + random(p.x * p.y) - random(p.x - p.y) * 129.);\\n}\\n\\nvec2 rotate(vec2 p, float a) {\\n    return vec2(\\n        p.x * cos(a) - p.y * sin(a),\\n        p.x * sin(a) + p.y * cos(a)\\n    );\\n}\\n\\n// Perlin noise\\nfloat noise(vec2 p) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.)), d = random(n + vec2(1., 1.)),\\n          a = random(n + vec2(0., 0.)), b = random(n + vec2(1., 0.));\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\n// Fractional brownian motion\\nfloat fbm(vec2 st) {\\n    float res = 0.;\\n    float amplitude = 1.;\\n    st = st * scale;\\n    for (int i = 0; i < MAX_OCTAVES; ++i) {\\n        if (i >= octaves) {\\n            break;\\n        }\\n        res += amplitude * noise(rotate(st, 5.12 * float(i)));\\n        amplitude *= gain;\\n        st *= lacunarity;\\n    }\\n    if (gain == 1.) {\\n        res = res / float(octaves);\\n    }\\n    else {\\n        res = res * (gain - 1.) / (pow(gain, float(octaves)) - 1.); \\n    }\\n    return res;\\n}\\n\\nfloat offsetNoise(vec2 st) {\\n    vec2 ost = st * offsetScale;\\n    float r_a = random(123.) - .5, r_B = random(r_a) * 100. - 50., r_C = random(r_B) * 100. - 50., \\n            r_d = random(r_C)  - .5, r_E = random(r_d) * 100. - 50., r_F = random(r_E) * 100. - 50.;\\n    vec2 offset = vec2(fbm(vec2(ost.y * r_a + r_B, ost.x * r_a + r_C)), fbm(vec2(ost.y * r_d + r_E, ost.x * r_d + r_F)));\\n    st = st + offset * dissolution;\\n    return fbm(st);\\n}\\n\\nvoid main() {\\n    if (channels == 1) {\\n        float r = offsetNoise(vPos), \\n              g = r, \\n              b = r;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 2) {\\n        float r = offsetNoise(vPos), \\n              g = offsetNoise(rotate(vPos, 45.) + vec2(617., 213.)), \\n              b = (r + g) / 2.;\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n    else if (channels == 3) {\\n        float r = offsetNoise(vPos), \\n              g = offsetNoise(rotate(vPos, 45.) + vec2(617., 213.)), \\n              b = offsetNoise(rotate(vPos, 30.) - vec2(617., 213.));\\n        gl_FragColor = vec4(r, g, b, 1.);\\n    }\\n}\""],"sourceRoot":""}