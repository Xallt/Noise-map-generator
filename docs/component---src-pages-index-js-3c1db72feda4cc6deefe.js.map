{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/panel-inputs/SliderInput.js","webpack:///./src/components/panel-inputs/NumberInput.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js","webpack:///./src/glsl/vert.glsl","webpack:///./src/glsl/frag.glsl"],"names":["Caption","render","react_default","a","createElement","Fragment","align","style","margin","href","React","Component","SliderInput","props","_this","_Component","call","this","state","value","dataTransform","x","defaultValue","min","_this2","_this$props","max","segmentation","name","id","type","onInput","e","target","setState","className","Panel","_React$Component","sendInput","bind","_assertThisInitialized","onResolutionInput","onSeedInput","defaultParams","resPower","params","resolution","componentDidMount","seed","width","padding","SliderInput_SliderInput","Math","round","pow","PixelShaderCanvas","animate","PixelShaderCanvas_assertThisInitialized","scene","Scene","camera","OrthographicCamera","position","z","console","log","renderer","WebGLRenderer","canvas","setSize","texSize","shape","Shape","Vector2","geo","ShapeBufferGeometry","material","ShaderMaterial","uniforms","initialScale","vertexShader","vert","fragmentShader","frag","mesh","Mesh","add","domElement","height","display","start","componentDidUpdate","frameId","requestAnimationFrame","renderScene","ref","canv","Renderer","uniformValues","inputParams","components_PixelShaderCanvas","App","windowWidth","windowHeight","handleInput","App_assertThisInitialized","updateSize","window","onresize","$","fadeIn","innerWidth","innerHeight","panelInput","fontSize","flex","WebsiteCaption","components_GeneratorPanel","RenderElement","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel","module","exports"],"mappings":"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","file":"component---src-pages-index-js-3c1db72feda4cc6deefe.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n  render() {\n    return (<>\n      <h1 align='center' style={{margin:\"2% 0 0 0\"}}>Noise generation</h1>\n      <h4 align='center'>Made by <a href=\"https://xallt.github.io\">Xallt</a></h4>\n    </>)\n  }\n}\n\nexport default Caption","import React, { Component } from 'react'\n\nexport default class SliderInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: (props.dataTransform || ((x) => x))(props.defaultValue || props.min || 0)\n        }\n    }\n\n    render() {\n        var {min, max, segmentation, name, defaultValue, dataTransform} = this.props\n        segmentation = segmentation || 1\n        min = min || 0\n        defaultValue = defaultValue || min\n        dataTransform = dataTransform || ((x) => x)\n\n        return (<>\n            {name}: &nbsp;\n            <input id={\"i\" + name}\n                type=\"range\" \n                min={min * segmentation} max={max * segmentation} \n                onInput={(e) => {\n                    this.props.onInput(dataTransform(e.target.value / segmentation)) \n                    this.setState({value: dataTransform(e.target.value / segmentation)})\n                }} \n                defaultValue={defaultValue * segmentation}/>\n            &nbsp;<mark className=\"invert\">{this.state.value}</mark><br/>\n        </>)\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NumberInput extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: props.defaultValue || 0\n        }\n    }\n\n    render() {\n        var {defaultValue, name} = this.props\n\n        defaultValue = defaultValue || 0\n\n        return (<>\n            {name}: &nbsp;\n            <input id={\"i\" + name}\n                type=\"number\" \n                onInput={(e) => {\n                    this.props.onInput(parseInt(e.target.value))\n                    this.setState({value: e.target.value})\n                }} \n                defaultValue={defaultValue}/>\n        </>)\n    }\n}\n","import React from 'react'\n\nimport '../styles/GeneratorPanel.css'\n\nimport SliderInput from './panel-inputs/SliderInput'\nimport NumberInput from './panel-inputs/NumberInput'\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onResolutionInput = this.onResolutionInput.bind(this)\n    this.onSeedInput = this.onSeedInput.bind(this)\n\n    // Default\n    this.defaultParams = {\n      resPower: 7000\n    }\n    this.params = {\n      resolution: 128\n    }\n  }\n\n  componentDidMount() {\n    this.sendInput()\n  }\n  \n\n  sendInput() {\n    this.props.onInput(this.params);\n  }\n\n  onResolutionInput(value) {\n    this.params.resolution = value\n    this.sendInput()\n  }\n\n  onSeedInput(value) {\n    this.params.seed = value\n    this.sendInput()\n  }\n\n  render() {\n    return (\n      <div style={{width: \"90%\", margin: \"1% auto\", padding:\"1%\"}}>\n        <SliderInput min={0} max={9.5} segmentation={1000} name=\"Resolution\" defaultValue={7} \n                     onInput={this.onResolutionInput} \n                     dataTransform={(x) => Math.round(2 ** x)}/>\n        {/* <NumberInput defaultValue={0} name=\"Seed\" onInput={this.onSeedInput} /> */}\n      </div>\n    )\n  }\n}\n\nexport default Panel","import React , {Component} from 'react'\nimport {Scene, OrthographicCamera, WebGLRenderer, Shape, Vector2, ShapeBufferGeometry, Mesh, ShaderMaterial} from 'three'\nimport vert from '../glsl/vert.glsl'\nimport frag from '../glsl/frag.glsl'\n\nclass PixelShaderCanvas extends Component {\n    constructor(props) {\n        super(props);\n\n        this.animate = this.animate.bind(this)\n    }\n    componentDidMount() {\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0.5, 100)\n        this.camera.position.z = 5\n        console.log(this.camera)\n        this.renderer = new WebGLRenderer({canvas: this.canvas})\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        \n        this.shape = new Shape([\n            new Vector2(-1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(1, -1)\n        ])\n        this.geo = new ShapeBufferGeometry(this.shape)\n        this.material = new ShaderMaterial({\n            uniforms: {\n                initialScale: {value: 20.0},\n                seed: {value: 0.0}\n            },\n            vertexShader: vert,\n            fragmentShader: frag\n        })\n        this.mesh = new Mesh(this.geo, this.material)\n        this.scene.add(this.mesh)\n        console.log(this.scene)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n\n        this.start()\n    }\n    componentDidUpdate() {\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n    }\n    \n    start() {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n    animate() {\n        this.renderScene()\n        this.frameId = requestAnimationFrame(this.animate)\n    }\n    renderScene() {\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return <canvas ref={(canv)=>{this.canvas = canv}} \n                    style={{height:\"100%\", display: \"block\", margin: \"0 auto\"}} \n                    width={this.props.texSize} \n                    height={this.props.texSize}/>\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  \n  render() {\n    const uniformValues = {\n      seed: this.props.inputParams.seed\n    }\n    return (\n      <PixelShaderCanvas texSize={this.props.inputParams.resolution} uniformValues={uniformValues} />\n    )\n  }\n}\n\n\nexport default Renderer","import React from 'react'\nimport $ from 'jquery'\n\nimport '../styles/App.css'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n\n  render() {\n    return (\n      <div style={{\n        margin: '0 auto',\n        width: this.state.windowWidth * .9,\n        height: Math.min(this.state.windowWidth * .5, this.state.windowHeight * .9),\n        fontSize: \"1.5vw\"\n      }}>\n        <div style={{display: 'flex', height: '100%'}}>\n          <div style={{flex:'30%'}}>\n            <div style={{height: '20%'}}>\n              <WebsiteCaption/>\n            </div>\n            <div style={{height: '80%'}}>\n              <GeneratorPanel onInput={this.handleInput}/>\n            </div>\n          </div>\n          <div style={{flex:'70%'}}>\n            <RenderElement inputParams={this.state.inputParams}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Beginner's title\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport {Helmet} from 'react-helmet'\n\nimport '../styles/layout.css'\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0., 1.);\\n    vPos = position.xy / 2. + .5;\\n}\"","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vPos;\\n\\nuniform float initialScale;\\nuniform float seed;\\n\\nfloat random(float x) {\\n    return fract(sin(x * 1238.412) * 219.32 + .76);\\n}\\nfloat random(vec2 p) {\\n    return random(random(p.x) * random(p.y) + random(p.x * p.y) - random(p.x - p.y) * 129.);\\n}\\n\\nfloat perlin(vec2 p) {\\n    vec2 n = floor(p), f = fract(p);\\n    f = smoothstep(0., 1., f);\\n    float c = random(n + vec2(0., 1.)), d = random(n + vec2(1., 1.)),\\n          a = random(n + vec2(0., 0.)), b = random(n + vec2(1., 0.));\\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\n\\nvoid main() {\\n    // gl_FragColor = vec4(vec3(.1), 1.);\\n    gl_FragColor = vec4(vec3(perlin(vPos * initialScale)), 1.);\\n}\""],"sourceRoot":""}