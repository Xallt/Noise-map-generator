{"version":3,"sources":["webpack:///./src/components/WebsiteCaption.js","webpack:///./src/components/GeneratorPanel.js","webpack:///./src/components/PixelShaderCanvas.js","webpack:///./src/components/RenderElement.js","webpack:///./src/NoiseGenerator.js","webpack:///./src/components/App.js","webpack:///./src/pages/index.js","webpack:///./src/templates/layout.js"],"names":["Caption","render","react_default","a","createElement","Fragment","align","href","React","Component","Panel","props","_this","_React$Component","call","this","sendInput","bind","_assertThisInitialized","onTextInput","params","text","onInput","e","target","value","PixelShaderCanvas","_Component","animate","PixelShaderCanvas_assertThisInitialized","componentDidMount","scene","Scene","camera","OrthographicCamera","texSize","renderer","WebGLRenderer","setClearColor","setSize","mount","appendChild","domElement","style","height","width","margin","display","start","frameId","requestAnimationFrame","renderScene","_this2","ref","Renderer","components_PixelShaderCanvas","mapper","drawer","panelInput","NoiseGenerator","random","x","seed","Math","sin","random2","y","noise","s","parseInt","k","App","state","windowWidth","windowHeight","inputParams","handleInput","App_assertThisInitialized","updateSize","window","onresize","$","fadeIn","setState","innerWidth","innerHeight","min","flex","WebsiteCaption","GeneratorPanel","RenderElement","Page","layout","title","components_App","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Layout","_ref","children","rel"],"mappings":"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","file":"component---src-pages-index-js-75301eb867e5be7b2e48.js","sourcesContent":["import React from 'react'\n\nclass Caption extends React.Component {\n  render() {\n    return (<>\n      <h1 align='center'>Noise generation</h1>\n      <h4 align='center'>Made by <a href=\"https://xallt.github.io\">Xallt</a></h4>\n    </>)\n  }\n}\n\nexport default Caption","import React from 'react'\n\nclass Panel extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.sendInput = this.sendInput.bind(this)\n    this.onTextInput = this.onTextInput.bind(this)\n\n    // Default\n    this.params = {\n      text: ''\n    }\n  }\n\n  sendInput() {\n    this.props.onInput(this.params);\n  }\n\n  onTextInput(e) {\n    this.params.text = e.target.value\n    this.sendInput()\n  }\n\n  render() {\n    return (<></>\n      // <input type=\"text\" onInput={this.onTextInput}/>\n    )\n  }\n}\n\nexport default Panel","import React , {Component} from 'react'\nimport {Scene, OrthographicCamera, WebGLRenderer} from 'three'\n\nclass PixelShaderCanvas extends Component {\n    constructor(props) {\n        super(props);\n\n        this.animate = this.animate.bind(this)\n    }\n    componentDidMount() {\n        this.scene = new Scene()\n        this.camera = new OrthographicCamera(\n            -this.props.texSize / 2, \n            this.props.texSize / 2, \n            this.props.texSize / 2, \n            -this.props.texSize / 2, \n            1, 2\n        )\n        this.renderer = new WebGLRenderer()\n        this.renderer.setClearColor('#FF0000')\n        this.renderer.setSize(this.props.texSize, this.props.texSize)\n        this.mount.appendChild(this.renderer.domElement)\n        \n        this.renderer.domElement.style.height = \"100%\"\n        this.renderer.domElement.style.width = \"\"\n        this.renderer.domElement.style.margin = \"0 auto\"\n        this.renderer.domElement.style.display = \"block\"\n\n        this.start()\n    }\n    start() {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n    animate() {\n        this.renderScene()\n        this.frameId = requestAnimationFrame(this.animate)\n    }\n    renderScene() {\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return (\n            <div style={{width:\"100%\", height: \"100%\"}} ref={(mount) => {this.mount = mount}}/>\n        )\n    }\n}\n\nexport default PixelShaderCanvas","import React from 'react'\nimport PixelShaderCanvas from './PixelShaderCanvas'\n\nclass Renderer extends React.Component {\n  \n  render() {\n    return (\n      <PixelShaderCanvas mapper={this.props.drawer(this.props.panelInput)} texSize = {this.props.texSize} />\n    )\n  }\n}\n\n\nexport default Renderer","// import Random from 'random'\n\nclass NoiseGenerator {\n  static random(x, seed) {\n    seed = seed || 0\n    return (Math.sin(x * (1219.128 + seed * 112.2)) * (13221.21 - seed * 89.12)) % 1\n  }\n  static random2(x, y, seed) {\n    return NoiseGenerator.random(NoiseGenerator.random(x * y, seed) + NoiseGenerator.random(x, seed) - NoiseGenerator.random(y, seed))\n  }\n  static noise(params) {\n    let s = parseInt(params.text)\n    return (x, y) => {\n      var k = NoiseGenerator.random2(x, y, s)\n      return [k, k, k]\n    }\n  }\n}\n\nexport default NoiseGenerator","import React from 'react'\nimport $ from 'jquery'\n\nimport '../styles/App.css'\n\nimport WebsiteCaption from './WebsiteCaption'\nimport GeneratorPanel from './GeneratorPanel'\nimport RenderElement from './RenderElement'\nimport NoiseGenerator from '../NoiseGenerator'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0,\n      inputParams: {}\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.updateSize = this.updateSize.bind(this)\n  }\n\n  componentDidMount() {\n    window.onresize = this.updateSize\n    this.updateSize()\n\n    $(() => {\n      $('html').fadeIn(500)\n    })\n  }\n\n  updateSize() {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    })\n  }\n\n  handleInput(panelInput) {\n    this.setState({\n      inputParams: panelInput\n    })\n  }\n\n  render() {\n    return (\n      <div style={{\n        margin: '0 auto',\n        width: this.state.windowWidth * .9,\n        height: Math.min(this.state.windowWidth * .5, this.state.windowHeight * .9)\n      }}>\n        <div style={{display: 'flex', height: '100%'}}>\n          <div style={{flex:'30%'}}>\n            <div style={{height: '20%'}}>\n              <WebsiteCaption/>\n            </div>\n            <div style={{height: '80%'}}>\n              <GeneratorPanel onInput={this.handleInput}/>\n            </div>\n          </div>\n          <div style={{flex:'70%'}}>\n            <RenderElement panelInput={this.state.inputParams} drawer={NoiseGenerator.noise} texSize={256}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\n\nimport Layout from '../templates/layout'\nimport App from '../components/App'\n\nconst Page = () => (\n  <Layout title=\"Beginner's title\">\n    <App/>\n  </Layout>\n)\n\nexport default Page","import React from 'react'\nimport {Helmet} from 'react-helmet'\n\nimport '../styles/layout.css'\n\nconst Layout = ({children, title}) => (\n  <>\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"stylesheet\"></link>\n    </Helmet>\n    <main>{children}</main>\n  </>\n)\n\nexport default Layout;"],"sourceRoot":""}